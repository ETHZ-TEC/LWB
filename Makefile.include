ifndef CONTIKI
  ${error CONTIKI not defined! You must specify where CONTIKI resides}
endif

STACKSIZE ?= 500

ifndef NODE_ID
  ifdef node_id
    NODE_ID=$(node_id)
  endif
endif

ifndef TARGET 
  ifdef target
    TARGET=$(target)
  else
    TARGET = dpp
    #${warning WARNING: TARGET not defined (set to dpp)}
  endif
endif

ifeq ($(TARGET),olimex)
  MCU ?= cc430f5137
  MCUFOLDER ?= cc430
  PLATFORM ?= olimex-ccrf
else ifeq ($(TARGET),sky)
  MCU ?= msp430f1611
  MCUFOLDER ?= msp430f1611
  PLATFORM ?= sky
else ifeq ($(TARGET),custom-cc430)
  MCU ?= cc430f5137
  MCUFOLDER ?= cc430
  PLATFORM ?= custom-cc430
else ifeq ($(TARGET),dpp2)
  MCU ?= cc430f5147
  MCUFOLDER ?= cc430
  PLATFORM ?= dpp2-cc430
else ifeq ($(TARGET),dpp-cc430)
  MCU ?= cc430f5147
  MCUFOLDER ?= cc430
  PLATFORM ?= dpp-cc430
else ifeq ($(TARGET),dpp)
  MCU ?= cc430f5147
  MCUFOLDER ?= cc430
  PLATFORM ?= dpp-cc430
else
  MCU ?= cc430f5137
  MCUFOLDER ?= cc430
  PLATFORM ?= olimex-ccrf
  ${error unknown TARGET}
endif


EXEFILE = $(CONTIKI_PROJECT).exe
HEXFILE = $(CONTIKI_PROJECT).hex
DISFILE = $(CONTIKI_PROJECT).dis
XMLFILE = $(CONTIKI_PROJECT)-$(TARGET).xml

COREDIR = $(CONTIKI)/core
SYSDIR  = $(COREDIR)/sys
DEVDIR  = $(COREDIR)/dev
LIBDIR  = $(COREDIR)/lib
NETDIR  = $(COREDIR)/net
SCHEDDIR = $(COREDIR)/net/scheduler
CPUDIR  = $(CONTIKI)/mcu/$(MCUFOLDER)
MCUDIR  = $(CONTIKI)/mcu
PLATDIR = $(CONTIKI)/platform/$(PLATFORM)
TOOLSDIR= $(CONTIKI)/tools
OBJDIR  = ./obj
ifeq (${wildcard $(OBJDIR)},)
  DUMMY := ${shell mkdir $(OBJDIR)}
endif

CC = msp430-gcc
LD = msp430-gcc
# -ggdb removed from CFLAGS due to strange "relocation truncated to fit: R_MSP430_16_BYTE against `no symbol'" error during compilation
CFLAGS  += -mmcu=$(MCU) -Os -Wall -ffunction-sections -fdata-sections
LDFLAGS += -mmcu=$(MCU) -Wl,--gc-sections -ggdb

# add timestamp to the compile flags (to be used in the code), will work on UNIX systems only 
#`date '+%s'`
CFLAGS += -DCOMPILE_TIME=${shell date '+%s'}

# add git revision SHA to compile flags
#git log | head -1 | sed 's/.*\s//' equivalent to git rev-parse HEAD
ifndef GITSHA
  GITSHA = ${shell git rev-parse HEAD | head -c8}
endif
CFLAGS += -DGIT_HEADREV_SHA="\"$(GITSHA)\""

# search folders for source files
CORESRCS = ${shell find $(COREDIR) -type f -name "*.[c]" -printf "%f "}
PLATSRCS = ${shell find $(PLATDIR) -type f -name "*.[c]" -printf "%f "}
PLATSRCS += ${shell find $(CPUDIR) -type f -name "*.[c]" -printf "%f "}

OBJS = ${addprefix $(OBJDIR)/,$(CORESRCS:.c=.o) $(PLATSRCS:.c=.o) $(SRCS:.c=.o)}

SOURCEDIRS = . $(COREDIR) $(SYSDIR) $(DEVDIR) $(LIBDIR) $(PLATDIR) $(CONTIKI) $(CPUDIR) $(NETDIR) $(SCHEDDIR) $(MCUDIR)
vpath %.c $(SOURCEDIRS)
CFLAGS += ${addprefix -I,$(SOURCEDIRS)}

# forward comma-separated list of arbitrary defines to the compiler
COMMA := ,
CFLAGS += ${addprefix -D,${subst $(COMMA), ,$(DEFINES)}}

$(EXEFILE): $(OBJS)
	$(LD) $(LDFLAGS) -o $@ $^
	@msp430-objcopy $(EXEFILE) -O ihex $(HEXFILE)
	@msp430-objdump -d $(EXEFILE) > $(DISFILE)
	@msp430-size $(EXEFILE)
	@msp430-size $(EXEFILE) | tail -1 | awk '{if ($$2 + $$3 > (4096 - $(STACKSIZE))) { print "WARNING: only " 4096 - ($$2 + $$3) " bytes remaining for the stack!" } }'
	$(info ----- compiled for $(PLATFORM) (MCU: $(MCU)) -----)


ifneq ($(MAKECMDGOALS),clean)
-include ${addprefix $(OBJDIR)/,$(CORESRCS:.c=.d) $(PLATSRCS:.c=.d) $(SRCS:.c=.d)}
endif


define FINALIZE_DEPENDENCY
cp $(@:.o=.d) $(@:.o=.$$$$); \
sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
    -e '/^$$/ d' -e 's/$$/ :/' < $(@:.o=.$$$$) >> $(@:.o=.d); \
rm -f $(@:.o=.$$$$)
endef

$(OBJDIR)/%.o: %.c
	$(CC) $(CFLAGS) -DAUTOSTART_ENABLE -MMD -c $< -o $@
	@$(FINALIZE_DEPENDENCY)


upload_fet: $(EXEFILE)
ifdef NODE_ID
	@tos-set-symbols --objcopy msp430-objcopy --objdump msp430-objdump --target ihex $(EXEFILE) $(HEXFILE) TOS_NODE_ID=$(NODE_ID)
	$(info ----- node ID set to $(NODE_ID) -----)
else
	@msp430-objcopy $(EXEFILE) -O ihex $(HEXFILE)
endif
	@mspdebug tilib "prog $(HEXFILE)" --allow-fw-update


upload: $(EXEFILE)
ifdef NODE_ID
	@tos-set-symbols --objcopy msp430-objcopy --objdump msp430-objdump --target ihex $(EXEFILE) $(HEXFILE) TOS_NODE_ID=$(NODE_ID)
	$(info ----- node ID set to $(NODE_ID) -----)
else
	@msp430-objcopy $(EXEFILE) -O ihex $(HEXFILE)
endif
	@python3 $(CONTIKI)/tools/dpp/program_cc430.py $(HEXFILE) $(PORT)


login:
	@python $(CONTIKI)/tools/dpp/login_cc430.py $(PORT)


verify:
	@mspdebug tilib "verify $(HEXFILE)"


stackcheck:
	@msp430-size $(EXEFILE) | tail -1 | awk '{if ($$2 + $$3 > (4096 - $(STACKSIZE))) { print "WARNING: only " 4096 - ($$2 + $$3) " bytes remaining for the stack!" } else { print "OK" } }'


.PHONY: clean

clean:
	@rm -rf $(OBJDIR) $(EXEFILE) $(HEXFILE) $(DISFILE) $(XMLFILE)

